#include "RecoTargetDetectorProperties.h"

namespace RecoTarget
{
  //! return a map <plane number, plane position>
  std::map <int, double> getPositionsMap ()
  {
    std::map <int, double> positions;
    
    positions[0] = 4514.11;
    positions[1] = 4534.76;
    positions[2] = 4558.33;
    positions[3] = 4578.97;
    positions[4] = 4602.54;
    positions[5] = 4623.19;
    positions[6] = 4646.76;
    positions[7] = 4667.4;
    positions[8] = 4735.19;
    positions[9] = 4755.83;
    positions[10] = 4779.4;
    positions[11] = 4800.05;
    positions[12] = 4823.62;
    positions[13] = 4844.26;
    positions[14] = 4867.83;
    positions[15] = 4888.48;
    positions[16] = 5000.48;
    positions[17] = 5021.12;
    positions[18] = 5044.69;
    positions[19] = 5065.34;
    positions[20] = 5088.91;
    positions[21] = 5109.55;
    positions[22] = 5133.12;
    positions[23] = 5153.77;
    positions[24] = 5456.74;
    positions[25] = 5477.38;
    positions[26] = 5500.95;
    positions[27] = 5521.6;
    positions[28] = 5545.17;
    positions[29] = 5565.81;
    positions[30] = 5589.38;
    positions[31] = 5610.02;
    positions[32] = 5677.81;
    positions[33] = 5698.45;
    positions[34] = 5722.03;
    positions[35] = 5742.67;
    positions[36] = 4293.04;
    positions[37] = 4313.68;
    positions[38] = 4337.25;
    positions[39] = 4357.9;
    positions[40] = 4381.47;
    positions[41] = 4402.11;
    positions[42] = 4425.68;
    positions[43] = 4446.33;
    positions[44] = 5810.45;
    positions[45] = 5831.1;
    positions[46] = 5855.68;
    positions[47] = 5876.33;
    positions[48] = 5900.91;
    positions[49] = 5921.56;
    positions[50] = 5946.14;
    positions[51] = 5966.79;
    positions[52] = 5991.37;
    positions[53] = 6012.01;
    positions[54] = 6036.6;
    positions[55] = 6057.24;
    positions[56] = 6081.83;
    positions[57] = 6102.47;
    positions[58] = 6127.06;
    positions[59] = 6147.7;
    positions[60] = 6172.29;
    positions[61] = 6192.93;
    positions[62] = 6217.52;
    positions[63] = 6238.16;
    positions[64] = 6262.74;
    positions[65] = 6283.39;
    positions[66] = 6307.97;
    positions[67] = 6328.62;
    positions[68] = 6353.2;
    positions[69] = 6373.85;
    positions[70] = 6398.43;
    positions[71] = 6419.08;
    positions[72] = 6443.66;
    positions[73] = 6464.3;
    positions[74] = 6488.89;
    positions[75] = 6509.53;
    positions[76] = 6534.12;
    positions[77] = 6554.76;
    positions[78] = 6579.35;
    positions[79] = 6599.99;
    positions[80] = 6624.58;
    positions[81] = 6645.22;
    positions[82] = 6669.81;
    positions[83] = 6690.45;
    positions[84] = 6715.03;
    positions[85] = 6735.68;
    positions[86] = 6760.26;
    positions[87] = 6780.91;
    positions[88] = 6805.49;
    positions[89] = 6826.14;
    positions[90] = 6850.72;
    positions[91] = 6871.37;
    positions[92] = 6895.95;
    positions[93] = 6916.59;
    positions[94] = 6941.18;
    positions[95] = 6961.82;
    positions[96] = 6986.41;
    positions[97] = 7007.05;
    positions[98] = 7031.64;
    positions[99] = 7052.28;
    positions[100] = 7076.87;
    positions[101] = 7097.51;
    positions[102] = 7122.1;
    positions[103] = 7142.74;
    positions[104] = 7167.32;
    positions[105] = 7187.97;
    positions[106] = 7212.55;
    positions[107] = 7233.2;
    positions[108] = 7257.78;
    positions[109] = 7278.43;
    positions[110] = 7303.01;
    positions[111] = 7323.66;
    positions[112] = 7348.24;
    positions[113] = 7368.88;
    positions[114] = 7393.47;
    positions[115] = 7414.11;
    positions[116] = 7438.7;
    positions[117] = 7459.34;
    positions[118] = 7483.93;
    positions[119] = 7504.57;
    positions[120] = 7529.16;
    positions[121] = 7549.8;
    positions[122] = 7574.39;
    positions[123] = 7595.03;
    positions[124] = 7619.61;
    positions[125] = 7640.26;
    positions[126] = 7664.84;
    positions[127] = 7685.49;
    positions[128] = 7710.07;
    positions[129] = 7730.72;
    positions[130] = 7755.3;
    positions[131] = 7775.95;
    positions[132] = 7800.53;
    positions[133] = 7821.17;
    positions[134] = 7845.76;
    positions[135] = 7866.4;
    positions[136] = 7890.99;
    positions[137] = 7911.63;
    positions[138] = 7936.22;
    positions[139] = 7956.86;
    positions[140] = 7981.45;
    positions[141] = 8002.09;
    positions[142] = 8026.68;
    positions[143] = 8047.32;
    positions[144] = 8071.9;
    positions[145] = 8092.55;
    positions[146] = 8117.13;
    positions[147] = 8137.78;
    positions[148] = 8162.36;
    positions[149] = 8183.01;
    positions[150] = 8207.59;
    positions[151] = 8228.24;
    positions[152] = 8252.82;
    positions[153] = 8273.46;
    positions[154] = 8298.05;
    positions[155] = 8318.69;
    positions[156] = 8343.28;
    positions[157] = 8363.92;
    positions[158] = 8388.51;
    positions[159] = 8409.15;
    positions[160] = 8433.74;
    positions[161] = 8454.38;
    positions[162] = 8478.97;
    positions[163] = 8499.61;
    positions[164] = 8524.19;
    positions[165] = 8544.84;
    positions[166] = 8569.42;
    positions[167] = 8590.07;
    positions[168] = 8614.65;
    positions[169] = 8635.3;
    positions[170] = 8659.46;
    positions[171] = 8680.1;
    positions[172] = 8704.26;
    positions[173] = 8724.9;
    positions[174] = 8749.06;
    positions[175] = 8769.71;
    positions[176] = 8793.86;
    positions[177] = 8814.51;
    positions[178] = 8838.67;
    positions[179] = 8859.31;
    positions[180] = 8883.47;
    positions[181] = 8904.11;
    positions[182] = 8928.27;
    positions[183] = 8948.92;
    positions[184] = 8973.08;
    positions[185] = 8993.72;
    positions[186] = 9017.88;
    positions[187] = 9038.52;
    positions[188] = 9088.08;
    positions[189] = 9135.41;
    positions[190] = 9182.75;
    positions[191] = 9230.08;
    positions[192] = 9277.41;
    positions[193] = 9324.74;
    positions[194] = 9372.08;
    positions[195] = 9419.41;
    positions[196] = 9466.74;
    positions[197] = 9514.07;
    positions[198] = 9561.41;
    positions[199] = 9608.74;
    positions[200] = 9656.07;
    positions[201] = 9703.4;
    positions[202] = 9750.74;
    positions[203] = 9798.07;
    positions[204] = 9845.4;
    positions[205] = 9892.73;
    positions[206] = 9940.07;
    positions[207] = 9987.4;
    
    return positions;
  }

  //! return a map <id of plane, order of plane> 
  std::map <int, int> getIdOrderMap ()
  {
    std::map <int, int> idToOrder;
    
    idToOrder[1208221696] = 0;
    idToOrder[1208483840] = 1;
    idToOrder[1209270272] = 2;
    idToOrder[1209532416] = 3;
    idToOrder[1210318848] = 4;
    idToOrder[1210580992] = 5;
    idToOrder[1211367424] = 6;
    idToOrder[1211629568] = 7;
    idToOrder[1213464576] = 8;
    idToOrder[1213726720] = 9;
    idToOrder[1214513152] = 10;
    idToOrder[1214775296] = 11;
    idToOrder[1215561728] = 12;
    idToOrder[1215823872] = 13;
    idToOrder[1216610304] = 14;
    idToOrder[1216872448] = 15;
    idToOrder[1219756032] = 16;
    idToOrder[1220018176] = 17;
    idToOrder[1220804608] = 18;
    idToOrder[1221066752] = 19;
    idToOrder[1221853184] = 20;
    idToOrder[1222115328] = 21;
    idToOrder[1222901760] = 22;
    idToOrder[1223163904] = 23;
    idToOrder[1223950336] = 24;
    idToOrder[1224212480] = 25;
    idToOrder[1224998912] = 26;
    idToOrder[1225261056] = 27;
    idToOrder[1226047488] = 28;
    idToOrder[1226309632] = 29;
    idToOrder[1227096064] = 30;
    idToOrder[1227358208] = 31;
    idToOrder[1229193216] = 32;
    idToOrder[1229455360] = 33;
    idToOrder[1230241792] = 34;
    idToOrder[1230503936] = 35;
    idToOrder[1336147968] = 36;
    idToOrder[1336410112] = 37;
    idToOrder[1337196544] = 38;
    idToOrder[1337458688] = 39;
    idToOrder[1338245120] = 40;
    idToOrder[1338507264] = 41;
    idToOrder[1339293696] = 42;
    idToOrder[1339555840] = 43;
    idToOrder[1500774400] = 44;
    idToOrder[1501036544] = 45;
    idToOrder[1501822976] = 46;
    idToOrder[1502085120] = 47;
    idToOrder[1502871552] = 48;
    idToOrder[1503133696] = 49;
    idToOrder[1503920128] = 50;
    idToOrder[1504182272] = 51;
    idToOrder[1504968704] = 52;
    idToOrder[1505230848] = 53;
    idToOrder[1506017280] = 54;
    idToOrder[1506279424] = 55;
    idToOrder[1507065856] = 56;
    idToOrder[1507328000] = 57;
    idToOrder[1508114432] = 58;
    idToOrder[1508376576] = 59;
    idToOrder[1509163008] = 60;
    idToOrder[1509425152] = 61;
    idToOrder[1510211584] = 62;
    idToOrder[1510473728] = 63;
    idToOrder[1511260160] = 64;
    idToOrder[1511522304] = 65;
    idToOrder[1512308736] = 66;
    idToOrder[1512570880] = 67;
    idToOrder[1513357312] = 68;
    idToOrder[1513619456] = 69;
    idToOrder[1514405888] = 70;
    idToOrder[1514668032] = 71;
    idToOrder[1515454464] = 72;
    idToOrder[1515716608] = 73;
    idToOrder[1516503040] = 74;
    idToOrder[1516765184] = 75;
    idToOrder[1517551616] = 76;
    idToOrder[1517813760] = 77;
    idToOrder[1518600192] = 78;
    idToOrder[1518862336] = 79;
    idToOrder[1519648768] = 80;
    idToOrder[1519910912] = 81;
    idToOrder[1520697344] = 82;
    idToOrder[1520959488] = 83;
    idToOrder[1521745920] = 84;
    idToOrder[1522008064] = 85;
    idToOrder[1522794496] = 86;
    idToOrder[1523056640] = 87;
    idToOrder[1523843072] = 88;
    idToOrder[1524105216] = 89;
    idToOrder[1524891648] = 90;
    idToOrder[1525153792] = 91;
    idToOrder[1525940224] = 92;
    idToOrder[1526202368] = 93;
    idToOrder[1526988800] = 94;
    idToOrder[1527250944] = 95;
    idToOrder[1528037376] = 96;
    idToOrder[1528299520] = 97;
    idToOrder[1529085952] = 98;
    idToOrder[1529348096] = 99;
    idToOrder[1530134528] = 100;
    idToOrder[1530396672] = 101;
    idToOrder[1531183104] = 102;
    idToOrder[1531445248] = 103;
    idToOrder[1532231680] = 104;
    idToOrder[1532493824] = 105;
    idToOrder[1533280256] = 106;
    idToOrder[1533542400] = 107;
    idToOrder[1534328832] = 108;
    idToOrder[1534590976] = 109;
    idToOrder[1535377408] = 110;
    idToOrder[1535639552] = 111;
    idToOrder[1536425984] = 112;
    idToOrder[1536688128] = 113;
    idToOrder[1537474560] = 114;
    idToOrder[1537736704] = 115;
    idToOrder[1538523136] = 116;
    idToOrder[1538785280] = 117;
    idToOrder[1539571712] = 118;
    idToOrder[1539833856] = 119;
    idToOrder[1540620288] = 120;
    idToOrder[1540882432] = 121;
    idToOrder[1541668864] = 122;
    idToOrder[1541931008] = 123;
    idToOrder[1542717440] = 124;
    idToOrder[1542979584] = 125;
    idToOrder[1543766016] = 126;
    idToOrder[1544028160] = 127;
    idToOrder[1544814592] = 128;
    idToOrder[1545076736] = 129;
    idToOrder[1545863168] = 130;
    idToOrder[1546125312] = 131;
    idToOrder[1546911744] = 132;
    idToOrder[1547173888] = 133;
    idToOrder[1547960320] = 134;
    idToOrder[1548222464] = 135;
    idToOrder[1549008896] = 136;
    idToOrder[1549271040] = 137;
    idToOrder[1550057472] = 138;
    idToOrder[1550319616] = 139;
    idToOrder[1551106048] = 140;
    idToOrder[1551368192] = 141;
    idToOrder[1552154624] = 142;
    idToOrder[1552416768] = 143;
    idToOrder[1553203200] = 144;
    idToOrder[1553465344] = 145;
    idToOrder[1554251776] = 146;
    idToOrder[1554513920] = 147;
    idToOrder[1555300352] = 148;
    idToOrder[1555562496] = 149;
    idToOrder[1556348928] = 150;
    idToOrder[1556611072] = 151;
    idToOrder[1557397504] = 152;
    idToOrder[1557659648] = 153;
    idToOrder[1558446080] = 154;
    idToOrder[1558708224] = 155;
    idToOrder[1559494656] = 156;
    idToOrder[1559756800] = 157;
    idToOrder[1560543232] = 158;
    idToOrder[1560805376] = 159;
    idToOrder[1561591808] = 160;
    idToOrder[1561853952] = 161;
    idToOrder[1562640384] = 162;
    idToOrder[1562902528] = 163;
    idToOrder[1563688960] = 164;
    idToOrder[1563951104] = 165;
    idToOrder[1564737536] = 166;
    idToOrder[1564999680] = 167;
    idToOrder[1700003840] = 168;
    idToOrder[1700265984] = 169;
    idToOrder[1701052416] = 170;
    idToOrder[1701314560] = 171;
    idToOrder[1702100992] = 172;
    idToOrder[1702363136] = 173;
    idToOrder[1703149568] = 174;
    idToOrder[1703411712] = 175;
    idToOrder[1704198144] = 176;
    idToOrder[1704460288] = 177;
    idToOrder[1705246720] = 178;
    idToOrder[1705508864] = 179;
    idToOrder[1706295296] = 180;
    idToOrder[1706557440] = 181;
    idToOrder[1707343872] = 182;
    idToOrder[1707606016] = 183;
    idToOrder[1708392448] = 184;
    idToOrder[1708654592] = 185;
    idToOrder[1709441024] = 186;
    idToOrder[1709703168] = 187;
    idToOrder[1844969472] = 188;
    idToOrder[1846018048] = 189;
    idToOrder[1847066624] = 190;
    idToOrder[1848115200] = 191;
    idToOrder[1849163776] = 192;
    idToOrder[1850212352] = 193;
    idToOrder[1851260928] = 194;
    idToOrder[1852309504] = 195;
    idToOrder[1853358080] = 196;
    idToOrder[1854406656] = 197;
    idToOrder[1855455232] = 198;
    idToOrder[1856503808] = 199;
    idToOrder[1857552384] = 200;
    idToOrder[1858600960] = 201;
    idToOrder[1859649536] = 202;
    idToOrder[1860698112] = 203;
    idToOrder[1861746688] = 204;
    idToOrder[1862795264] = 205;
    idToOrder[1863843840] = 206;
    idToOrder[1864892416] = 207;
    
    return idToOrder;
  }

  std::map <int, double> planePositions = getPositionsMap();  
  std::map <int, int> idOrderMap = getIdOrderMap();
}
